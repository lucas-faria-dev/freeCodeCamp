// Copyright 2006-2022 ClickTale Ltd., US Patent Pending

window.ClickTaleGlobal = window.ClickTaleGlobal || {};
window.ClickTaleSettings = window.ClickTaleSettings || {};

ClickTaleGlobal.init = ClickTaleGlobal.init || {};
ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};
ClickTaleGlobal.scripts.versions = {"wr": "bridge-WR110.js", "pcc": "ce5b37b2-95df-49bf-9f4a-ad6e18c29ca8.js?DeploymentConfigName=Malka_20220210&Version=2"};
(function (d) {
	var dom="h",
		spe=[92,94,36,46,124,63,42,43,40,41,91,123],
		rep=[98,100,102,104,106,108,110,112,114,116,118,119];
	for(var v,c,i=0,len=d.length;i<len,c=d.charCodeAt(i);i++){		
		if(c>=97&c<=122){v=c+7;v=v>122?v-26:v;v=v%2==0?v-32:v;}
		else if(c>=48&c<=57){v=69+(c-48)*2}
		else if(c==45){v=65}
		else if(spe.indexOf(c)>=0){v=rep[spe.indexOf(c)]}
		else{v=c}
		dom+=String.fromCharCode(v);
	}

	ClickTaleGlobal.init.isAllowed = (function() {
						var doms = ["JoHayDPyLsLZZhJVT","kLchyVNLyZhJVT","mPkVhJH","XHEGAJmHhyVNLyZhJVT","XHEGAVuLcPLDhyVNLyZhJVT","XHEIAJmHhyVNLyZhJVT","XHEIAVuLcPLDhyVNLyZhJVT","XHEKAJmHhyVNLyZhJVT","XHEKAVuLcPLDhyVNLyZhJVT","XHEMAJmHhyVNLyZhJVT","XHEMAVuLcPLDhyVNLyZhJVT","XHEOAJmHhyVNLyZhJVT","XHEOAVuLcPLDhyVNLyZhJVT","XHEQAJmHhyVNLyZhJVT","XHEQAVuLcPLDhyVNLyZhJVT","XHESAJmHhyVNLyZhJVT","XHESAVuLcPLDhyVNLyZhJVT","XHOhyVNLyZhJVT","XHShyVNLyZhJVT","XBHsayPJZhJVT","yVNLyZhJVT","ZoVwJoHayTViPsLhJH"];
			if(location.protocol == "file:") return false;
			for(var i=0, curr; i < doms.length, curr = doms[i]; i++) {
								if(new RegExp("h" + curr + "$", "i").test(dom))
									return true;
			}
			return false;
					})()
})(window.location.host.toLowerCase().replace(/^((www)?\.)/i, ""));

ClickTaleSettings.Proxy = {
	WR: "ing-district.clicktale.net/ctn_v2/",
	ImageFlag: "ing-district.clicktale.net/ctn_v2/"
}
ClickTaleSettings.Protocol = {
	Method: "ImpactRecorder"
}
ClickTaleGlobal.diagnostics=function(){function n(n,t,o){if(n&&t)for(var r in T){var e=T[r];e.collect(t)&&e.errors.push({message:n,url:t,lineno:o})}return!!S&&S(n,t,o)}function t(n){return"function"==typeof n}function o(){return performance?performance.now():Date.now()}function r(n){++n.sampled>n.repeats?g(n.name):e(n)}function e(n){var t=n.reporter()||{},o=n.errors.splice(0),r=n.level,e=n.url,l={loaded:n.loaded,ready:n.ready,started:n.started,level:o.length?"error":r,errors:encodeURIComponent(JSON.stringify(o))};e&&r!==k&&(n.timeToLoad>0&&(l.timeToLoad=n.timeToLoad),a(n,i(i(e+"?t=log&p="+n.pid,l),t),o))}function i(n,t){for(var o in t)n+="&"+I[o]+"="+t[o];return n}function a(n,o,r){var e=L.sendBeacon,i=function(n){n.errors=r.concat(n.errors)};if(t(e))e.call(L,o)||i(n);else{var a=new Image;a.onerror=a.ontimeout=function(){i(n)},a.timeout=3e4,a.src=o}}function l(n){T[n]&&(T[n].ready=!0)}function c(n){var t=T[n];t&&(t.loaded=!0,t.timeToLoad=t.loadStart?o()-t.loadStart:0),T[n]=t}function d(n){T[n]&&(T[n].loading=!0,T[n].loadStart=o())}function u(n){T[n]&&(T[n].started=!0)}function f(n){T[n]&&(T[n].starting=!0)}function s(n,o,r){var e=window.ClickTaleMonitor;e&&(I.monitorState=40,I.isMonitoring=42,t(e.getPid)&&v(M,e.getPid(),n||"https://conductor.clicktale.net/monitor",/\/monitor-(latest|[\d\.]+).*\.js$/i,function(){var n=t(e.getState)&&e.getState();return!this.errors.length&&n.match(/^(chunk|end)$/i)&&(this.level=k),{monitorState:n,isMonitoring:t(e.isMonitoring)&&e.isMonitoring()}},o||5e3,r||1))}function m(){g(M)}function v(t,o,r,e,i,a,l){T[t]=T[t]||new p(t,o,r,e,i,a,l),y||(S=window.onerror,window.onerror=n,y=!0)}function g(n){var t=T[n];t&&(clearInterval(t.sampler),delete T[n]);for(var o in T)return;y=!1}function p(n,t,o,e,i,a,l){var c=this;c.url=o,c.pid=t,c.errors=[],c.name=n,c.level="alert",c.repeats=l,c.loadStart=c.sampled=c.timeToLoad=0,c.loading=c.loaded=c.starting=c.started=c.ready=!1,c.reporter=function(){return i.call(c)},c.collect=function(n){return!!n.match(e)},c.sampler=setInterval(function(){r(c)},a)}function h(n,t,o){var r=n&&n.name,e=T[r];if(e){var i=e[t];"function"==typeof i&&i.apply(this,o)}}function w(n,t,o){return{on:t,off:o,onready:function(){l(n)},onloaded:function(){c(n)},onloading:function(){d(n)},onstarted:function(){u(n)},onstarting:function(){f(n)}}}var y,S,T={},L=navigator,k="info",M="monitor",I={level:0,loaded:2,ready:4,started:6,errors:8,timeToLoad:12};return{monitor:w(M,s,m),invoke:h}}();

ClickTaleGlobal.scripts.filter = ClickTaleGlobal.scripts.filter || (function () {
	var recordingThreshold = Math.random() * 100;

	return {
		isRecordingApproved: function(percentage) {
			return recordingThreshold <= percentage;
		}
	}
})();
	
if (typeof(ct_dispatcher) == 'undefined') {
	ct_dispatcher = {
		configName : null,
		cookieName : "ct_configName",
		getParameterByName : function (name) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS, "i");
			var results = regex.exec(window.location.search);
			if(results == null)
				return "";
			else
				return decodeURIComponent(results[1].replace(/\+/g, " "));
		},
		createCookie: function (name,value,days) {
			if (days) {
				var date = new Date();
				date.setTime(date.getTime()+(days*24*60*60*1000));
				var expires = "; expires="+date.toGMTString();
			}
			else var expires = "";
			document.cookie = name+"="+value+expires+"; path=/";
		},
		readCookie : function (name) {
			var nameEQ = name + "=";
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1,c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
			}
			return null;
		}
	};
	
	var ct_pdc_qs_val = ct_dispatcher.getParameterByName(ct_dispatcher.cookieName);
	if (ct_pdc_qs_val) {
		ct_dispatcher.createCookie(ct_dispatcher.cookieName, ct_pdc_qs_val, 14);
		ct_dispatcher.configName = ct_pdc_qs_val;
	}
	else {
		ct_dispatcher.configName = ct_dispatcher.readCookie(ct_dispatcher.cookieName);
	}	
}

if (typeof (ClickTaleCreateDOMElement) != "function")
{
	ClickTaleCreateDOMElement = function(tagName)
	{
		if (document.createElementNS)
		{
			return document.createElementNS('http://www.w3.org/1999/xhtml', tagName);
		}
		return document.createElement(tagName);
	}
}

if (typeof (ClickTaleAppendInHead) != "function")
{
	ClickTaleAppendInHead = function(element)
	{
		var parent = document.getElementsByTagName('head').item(0) || document.documentElement;
		parent.appendChild(element);
	}
}

if (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != "function")
{
	ClickTaleXHTMLCompliantScriptTagCreate = function(code)
	{
		var script = ClickTaleCreateDOMElement('script');
		script.setAttribute("type", "text/javascript");
		script.text = code;
		return script;
	}
}	
ClickTaleGlobal.init.configFoundPTC = false;
if (ct_dispatcher.configName == 'test_PTC_preWR_9.28')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2022 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 58\r\n\/\/ WR destination: www34\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 9.28\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\n\/\/ClickTaleSettings.PTC.maskAllTextNodes = true;\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function() {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function() {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 1;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\n\r\nconsole.log(\u0027%c PTC_preWR 9.28 \u003e free of CC \u0026 zone code\u0027, \u0027background-color : red\u0027);\r\n\/\/ if (window.Zone \u0026\u0026 typeof Zone[\u0027__symbol__\u0027] === \u0027function\u0027) {\r\n\/\/     ClickTaleSettings.PTC.restoreZonedXHR = function (xhr) {\r\n\/\/         if (xhr) {\r\n\/\/             var prot = Object.getPrototypeOf(xhr);\r\n\/\/             while (prot) {\r\n\/\/                 for (var propName in prot) {\r\n\/\/                     var replacement;\r\n\/\/                     if (replacement = prot[Zone[\u0027__symbol__\u0027](propName)]) {\r\n\/\/                         xhr[propName] = replacement;\r\n\/\/                     }\r\n\r\n\/\/                 }\r\n\/\/                 prot = Object.getPrototypeOf(prot);\r\n\/\/             }\r\n\/\/         }\r\n\r\n\/\/     }\r\n\r\n\/\/     window.ClickTaleOnXHRCreated = function (xhr) {\r\n\/\/         ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n\/\/     }\r\n\/\/ }\r\n\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\n\r\nClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nClickTaleSettings.PTC.UploadPageHappened = false;\r\nClickTaleSettings.PTC.IsMobile = false;\r\nClickTaleSettings.PTC.textRegex = \/\\w|[^\\x00-\\x7F]\/g;\r\n\r\nClickTaleSettings.CheckAgentSupport = function(f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function(strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"], input[type=\\\"password\\\"], input[type=\\\"hidden\\\"], input[type=\\\"number\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden, [data-cs-mask], textarea\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}];\r\n\r\nClickTaleSettings.PTC.RulesObjRemoveEls = [];\r\n\r\n;\r\n(function() {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(window.ClickTalePIISelector);\r\n            ClickTaleSettings.PTC.RulesObj.push({\r\n                selector: window.ClickTalePIISelector,\r\n                changeMon: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                },\r\n                rewriteApi: {\r\n                    Attributes: [\u0027value\u0027],\r\n                    Text: true\r\n                }\r\n            });\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: false,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027\u0027,\r\n    pid: \u0027\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function() {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function(type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    makeChanges: function(bodyClone) {\r\n        if (this.pid \u0026\u0026 this.subscriberId) {\r\n            Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027link[href][rel*=\"stylesheet\"]\u0027), function(el, ind) {\r\n                var hrefAttr = el.getAttribute(\u0027href\u0027);\r\n                if (hrefAttr.indexOf(ClickTaleSettings.PTC.AssetManager.storageUrl) == -1 \u0026\u0026 hrefAttr.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                    if (hrefAttr.indexOf(\u0027http\u0027) == -1) {\r\n                        hrefAttr = el.href || hrefAttr;\r\n                    }\r\n                    var finalCssURL = ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, hrefAttr);\r\n                    el.ClickTaleDep = el.ClickTaleDep || {};\r\n                    el.ClickTaleDep.AssetMan = el.ClickTaleDep.AssetMan || {}\r\n                    el.ClickTaleDep.AssetMan.href = finalCssURL;\r\n\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                Array.prototype.forEach.call(bodyClone.querySelectorAll(\u0027img[src]\u0027), function(el, ind) {\r\n                    var srcAttr = el.getAttribute(\u0027src\u0027);\r\n                    if (srcAttr.indexOf(ClickTaleSettings.PTC.AssetManager.storageUrl) == -1) {\r\n                        if (srcAttr.indexOf(\u0027http\u0027) == -1) {\r\n                            srcAttr = el.src || srcAttr;\r\n                        }\r\n                        var finalImageURL = ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027image\u0027, srcAttr);\r\n                        el.ClickTaleDep = el.ClickTaleDep || {};\r\n                        el.ClickTaleDep.AssetMan = el.ClickTaleDep.AssetMan || {}\r\n                        el.ClickTaleDep.AssetMan.src = finalImageURL;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.emptyEls = {\r\n    \"area\": true,\r\n    \"base\": true,\r\n    \"br\": true,\r\n    \"col\": true,\r\n    \"command\": true,\r\n    \"embed\": true,\r\n    \"hr\": true,\r\n    \"input\": true,\r\n    \"keygen\": true,\r\n    \"link\": true,\r\n    \"menuitem\": true,\r\n    \"meta\": true,\r\n    \"param\": true,\r\n    \"source\": true,\r\n    \"track\": true,\r\n    \"wbr\": true,\r\n    \"img\": true\r\n};\r\n\r\nClickTaleSettings.PTC.cloneNodeIE9 = function(node, norules) {\r\n    var unneededNodes = {\r\n        \u0027#document-fragment\u0027: true,\r\n        \u0027html\u0027: true\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!Array} arr\r\n     * @returns {Array}\r\n     *\/\r\n    function flattenDeep(arr) {\r\n        return arr.reduce(function(acc, val) {\r\n            return Array.isArray(val) ? acc.concat(flattenDeep(val)) : acc.concat(val)\r\n        }, []);\r\n    }\r\n\r\n\r\n    \/**\r\n     *\r\n     * @param {(DocumentOrShadowRoot)=} startNode\r\n     * @param {boolean=} includeDocument\r\n     * @returns {Array.\u003cDocumentOrShadowRoot\u003e}\r\n     *\/\r\n    function getAllHosts(startNode, includeDocument) {\r\n        if (Element.prototype.attachShadow \u0026\u0026 Array.prototype.flatMap) {\r\n            startNode = startNode || document.body;\r\n            var roots = Array.prototype.filter.call(startNode.querySelectorAll(\u0027*\u0027), function(el) {\r\n                return el.shadowRoot\r\n            }).map(function(el) {\r\n                return el.shadowRoot\r\n            });\r\n\r\n            roots = roots.concat(roots.flatMap(function(el) {\r\n                return getAllHosts(el);\r\n            }));\r\n            if (includeDocument \u0026\u0026 startNode == document.body) {\r\n                roots.push(document);\r\n            }\r\n            return roots;\r\n        }\r\n        return [document];\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!string} selector\r\n     * @param {!Array.\u003cDocumentOrShadowRoot\u003e} hosts\r\n     * @returns {Array.\u003cHTMLElement\u003e}\r\n     *\/\r\n    function seepRulesThroughShadowRoots(selector, hosts) {\r\n        return flattenDeep(hosts.map(function(host) {\r\n            return Array.prototype.slice.call(host.querySelectorAll(selector));\r\n        }));\r\n    }\r\n\r\n    if (!norules) {\r\n        var RulesObj = ClickTaleSettings.PTC.RulesObj;\r\n        var hosts = getAllHosts(undefined, true);\r\n        for (var i = 0; i \u003c RulesObj.length; i++) {\r\n            var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n            var rewriteApilocation = rewriteApirule[\u0027location\u0027];\r\n            if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                continue;\r\n            }\r\n            var elements = seepRulesThroughShadowRoots(RulesObj[i][\u0027selector\u0027], hosts);\r\n\r\n            Array.prototype.forEach.call(elements, function(el, ind) {\r\n                el.ClickTaleDep = el.ClickTaleDep || {};\r\n                el.ClickTaleDep.Attributes = \/** @type {!Array.\u003cstring\u003e} **\/ (el.ClickTaleDep.Attributes || []);\r\n                var attributesArr;\r\n                if (attributesArr = rewriteApirule.Attributes) {\r\n                    Array.prototype.push.apply(el.ClickTaleDep.Attributes, attributesArr)\r\n                }\r\n\r\n                if (rewriteApirule.Text) {\r\n                    el.ClickTaleDep.Text = true;\r\n                }\r\n            });\r\n        }\r\n        var RulesObjRemoveEls = ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n        if (RulesObjRemoveEls) {\r\n            for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                var removeRule = RulesObjRemoveEls[i];\r\n                var removeRuleLovation = removeRule[\u0027location\u0027]\r\n                if (!removeRule || (removeRuleLovation \u0026\u0026 document.location[removeRuleLovation[\u0027prop\u0027]].toLowerCase().search(removeRuleLovation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                if (removeRule.rewriteApi) {\r\n                    var elementsToRemove = seepRulesThroughShadowRoots(removeRule.rewriteApi, hosts);\r\n                    Array.prototype.forEach.call(elementsToRemove, function(el, ind) {\r\n                        el.ClickTaleDep = el.ClickTaleDep || {};\r\n                        el.ClickTaleDep.remove = true;\r\n                    });\r\n                }\r\n                if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                    var elementsToReplace = seepRulesThroughShadowRoots(RulesObjRemoveEls[i].rewriteApiReplace, hosts);\r\n                    Array.prototype.forEach.call(elementsToReplace, function(el, ind) {\r\n                        el.ClickTaleDep = el.ClickTaleDep || {};\r\n                        el.ClickTaleDep.replace = true;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    \/**\r\n     * Escape Quotes\r\n     * @param {!Object} depObj\r\n     * @param {!string} name\r\n     * @param {!string} value\r\n     * @return {!string}\r\n     *\/\r\n    function escapeValue(depObj, name, value) {\r\n        if (depObj.AssetMan \u0026\u0026 depObj.AssetMan[name]) {\r\n            value = depObj.AssetMan[name];\r\n        } else if (depObj.Attributes \u0026\u0026 depObj.Attributes.indexOf(name) != -1) {\r\n            value = replaceStr(value);\r\n        }\r\n        return name + \u0027=\"\u0027 + value.replace(\/\"\/g, \u0027\u0026quot;\u0027) + \u0027\"\u0027;\r\n    }\r\n\r\n\r\n    \/**\r\n     * Replace PII\r\n     * @param {!string} value\r\n     * @return {!string}\r\n     *\/\r\n    function replaceStr(value) {\r\n        return value.replace(ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n    }\r\n    \/**\r\n     * Replace PII\r\n     * @param {!string} value\r\n     * @return {!string}\r\n     *\/\r\n    function replaceTextWithA(value) {\r\n        return value.replace(\/\\S\/g, \u0027A\u0027);\r\n    }\r\n\r\n    \/**\r\n     * @param {!Node} node\r\n     * @returns {!string}\r\n     *\/\r\n    function doClone(node) {\r\n        var isShadowSupported = typeof Element.prototype.attachShadow === \u0027function\u0027 \u0026\u0026 ~Element.prototype.attachShadow.toString().indexOf(\u0027native\u0027);\r\n        var clone = \u0027\u0027;\r\n        var ClickTaleDep = node.ClickTaleDep || {};\r\n        if (ClickTaleDep.remove) {\r\n            return \u0027\u0027;\r\n        } else if (ClickTaleDep.replace) {\r\n            return \u0027\u003c!-- node replaced \u0027 + node.outerHTML.replace(\/\u003c!--\/g, \u0027\u0026lt;!--\u0027).replace(\/--\u003e\/g, \u0027--\u0026gt;\u0027) + \u0027--\u003e\u0027;\r\n        }\r\n\r\n        var nodeName = node.nodeName.toLowerCase();\r\n        if (nodeName === \u0027script\u0027) {\r\n            return \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027;\r\n        }\r\n        if (nodeName === \u0027dom-if\u0027) {\r\n            return \u0027\u0027;\r\n        }\r\n        if (nodeName === \u0027style\u0027 \u0026\u0026 node.hasAttribute(\u0027data-styled-components\u0027) \u0026\u0026 node.textContent.trim() === \u0027\u0027) {\r\n            var styleTextToReturn = \u0027\u0027;\r\n            if (node.sheet \u0026\u0026 node.sheet.cssRules) {\r\n                Array.prototype.forEach.call(node.sheet.cssRules, function(rule) {\r\n                    if (rule.cssText) {\r\n                        styleTextToReturn += (\u0027\\r\\n\u0027 + rule.cssText);\r\n                    }\r\n                });\r\n            }\r\n            return \u0027\u003cstyle data-styled-components=\"\"\u003e\u0027 + styleTextToReturn + \u0027\u003c\\\/style\u003e\u0027;\r\n        }\r\n        if (!unneededNodes[nodeName]) {\r\n            clone += (\u0027\u003c\u0027 + nodeName);\r\n            var attributes = node.attributes;\r\n            for (var i = 0, length = attributes.length; i \u003c length; i++) {\r\n                var attr = attributes[i];\r\n                clone += (\u0027 \u0027 + escapeValue(ClickTaleDep, attr.nodeName, attr.nodeValue));\r\n            }\r\n        }\r\n        if (ClickTaleSettings.PTC.emptyEls[nodeName]) {\r\n            clone += \u0027 \\\/\u003e\u0027;\r\n        } else {\r\n            if (!unneededNodes[nodeName]) {\r\n                clone += \u0027\u003e\u0027;\r\n            }\r\n            if (node.shadowRoot) {\r\n                if (isShadowSupported) {\r\n                    clone += (\u0027\u003cshadow-root\u003e\u0027);\r\n                }\r\n                clone += doClone(node.shadowRoot);\r\n                if (isShadowSupported) {\r\n                    clone += (\u0027\u003c\\\/shadow-root\u003e\u0027);\r\n                }\r\n            }\r\n            var child = node.firstChild;\r\n            while (child) {\r\n                var nodeType = child.nodeType;\r\n                switch (nodeType) {\r\n                    case 3:\r\n                        var nodeValue = child.nodeValue;\r\n                        if (ClickTaleSettings.PTC.maskAllTextNodes \u0026\u0026 nodeName !== \u0027style\u0027) {\r\n                            clone += replaceTextWithA(nodeValue);\r\n                        } else {\r\n                            clone += ClickTaleDep.Text ? replaceStr(nodeValue) : nodeValue;\r\n                        }\r\n                        break;\r\n                    case 8:\r\n                        clone += \u0027\u003c!--\u0027 + child.nodeValue + \u0027--\u003e\u0027;\r\n                        break;\r\n                    default:\r\n                        clone += doClone(child);\r\n                }\r\n\r\n                child = child.nextSibling;\r\n            }\r\n            if (!unneededNodes[nodeName]) {\r\n                clone += \u0027\u003c\\\/\u0027 + nodeName + \u0027\u003e\u0027;\r\n            }\r\n        }\r\n\r\n\r\n        return clone;\r\n\r\n    }\r\n    return doClone(node);\r\n};\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function() {\r\n\r\n    if (ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n\r\n        var a = document.createElement(\"script\"),\r\n            s = document.getElementsByTagName(\"script\")[0];\r\n        a.async = true;\r\n        a.crossOrigin = \"anonymous\";\r\n        a.type = \"text\/javascript\";\r\n        a.src = ClickTaleScriptSource + \"ChangeMonitor-latest.js\";\r\n        s.parentNode.insertBefore(a, s);\r\n\r\n        ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            LiveExclude: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function(changeMonitor) {\r\n                changeMonitor.observe();\r\n                if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n                    changeMonitor.exclude({\r\n                        selector: window.ClickTaleCMSelector,\r\n                        multiple: true\r\n                    });\r\n                }\r\n\r\n                var CMRemrule = ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) != -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function(settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 1000000,\r\n                MaxElementCount: 10000\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n\r\n        ClickTaleSettings.ChangeMonitor.AutoExclude = {\r\n            Enable: true,\r\n            Repeats: 10,\r\n            Interval: 200\r\n        };\r\n\r\n        var RulesObj = ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            ClickTaleSettings.ChangeMonitor.PII.Text = ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            ClickTaleSettings.ChangeMonitor.PII.Attributes = ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                        selector: selector,\r\n                        transform: (function(attributesArr) {\r\n                            return function(el) {\r\n                                var attrs = el.attributes;\r\n                                var attrsToReturn = {}\r\n                                for (var i = 0; i \u003c attrs.length; i++) {\r\n                                    var name = attrs[i].nodeName;\r\n                                    attrsToReturn[name] = attrs[i].nodeValue;\r\n                                }\r\n                                for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                    var attr = attributesArr[u];\r\n                                    var attrib = el.getAttribute(attr);\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                                    }\r\n                                }\r\n\r\n                                return attrsToReturn;\r\n                            }\r\n                        })(attributesArr)\r\n                    });\r\n                }\r\n                if (ClickTaleSettings.PTC.maskAllTextNodes) {\r\n                    ClickTaleSettings.ChangeMonitor.PII.Text = [{\r\n                        selector: [\u0027*:not(style)\u0027, function(elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function(curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []) || [];\r\n                            return Array.prototype.filter.call(els, function(child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function(el) {\r\n                            return el.textContent.replace(\/\\S\/g, \u0027A\u0027);\r\n                        }\r\n                    }];\r\n                } else if (CMrule.Text) {\r\n                    ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: [selector, function(elements) {\r\n                            var els = Array.prototype.reduce.call(elements, function(curr, add) {\r\n                                return curr.concat(Array.prototype.slice.call(add.childNodes));\r\n                            }, []) || [];\r\n                            return Array.prototype.filter.call(els, function(child) {\r\n                                return !!(child \u0026\u0026 child.nodeType === 3);\r\n                            });\r\n                        }],\r\n                        transform: function(el) {\r\n                            return el.textContent.replace(ClickTaleSettings.PTC.textRegex, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function(rewriteApi) {\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function(buffer) {\r\n                if (ClickTaleSettings.PTC.AssetManager \u0026\u0026\r\n                    ClickTaleSettings.PTC.AssetManager.isActive \u0026\u0026\r\n                    typeof ClickTaleSettings.PTC.AssetManager.makeChanges == \u0027function\u0027) {\r\n                    ClickTaleSettings.PTC.AssetManager.makeChanges(document);\r\n                }\r\n                return ClickTaleSettings.PTC.cloneNodeIE9(document.documentElement);\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"https:\\\/\\\/cdnssl.clicktale.net\\\/www\\\/tc\\\/jquery.min.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function(toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function() {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    (function() {\r\n        function init() {\r\n            var uxaGet = _uxa.push([\"getSessionData\"]);\r\n            if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                var pid = uxaGet.projectId;\r\n                var uu = uxaGet.userId;\r\n                var sn = uxaGet.sessionNumber;\r\n                var pvid = uxaGet.pageNumber;\r\n                if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                    var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                    window.ClicktaleReplayLink = function() {\r\n                        return intLink;\r\n                    }\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.replaylink = intLink;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function callback(context) {\r\n            if (!disableCallback) {\r\n                disableCallback = true;\r\n                init(context);\r\n            }\r\n        }\r\n        var disableCallback = false;\r\n        window._uxa = window._uxa || [];\r\n        _uxa.push([\u0027afterPageView\u0027, callback]);\r\n    })();\r\n\r\n}\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u0027ce5b37b2-95df-49bf-9f4a-ad6e18c29ca8.js?DeploymentConfigName=test_PTC_preWR_9.28\u0026Version=1\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=58, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www34\",\r\n\t\tSubsId=233256;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\n\/\/Start:IMP-1877\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.CustomVariables = window.ClickTaleSettings.PTC.CustomVariables || [];\r\nwindow.ClickTaleSettings.PTC.CustomVariables = [\r\n    { displayName: \u0027Adobe PageName\u0027, key: \u0027pageName\u0027, slot: 2}\r\n];\r\n\r\nfunction sendCVar(){\r\n    var data = window[\u0027s_c_il\u0027] \u0026\u0026  window[\u0027s_c_il\u0027][1];\r\n    var cVars = window.ClickTaleSettings.PTC.CustomVariables;\r\n    if (!!data){\r\n        for (var i = 0; i \u003c cVars.length; i++){\r\n            var value =  data[cVars[i].key];\r\n            !!value \u0026\u0026 window._uxa.push([\u0027setCustomVariable\u0027, cVars[i].slot, cVars[i].displayName, value]);  \r\n        }\r\n    }\r\n}\r\nwindow.ClickTaleOnStop = window.ClickTaleOnStop || [];\r\nClickTaleOnStop.push(sendCVar);\r\nsendCVar();\r\n\/\/End:IMP-1877\r\nif (window.location.href.toLowerCase().indexOf(\u0027\/pages\/easylogin-fido\/signin\/en\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027trackPageview\u0027, window.location.pathname + window.location.hash.replace(\u0027#\u0027, \u0027?__\u0027) + \u0027?cs-popin-login\u0027]);\r\n}\r\n\r\nif (window.location.href.indexOf(\u0027#\u0027) \u003e -1) {\r\n    if (isVisible(document.querySelector(\u0027.modal-dialog\u0027))) {\r\n        window._uxa.push([\u0027setPath\u0027, window.location.pathname + window.location.hash.replace(\u0027#\u0027, \u0027?__cs-popup-offers\u0027)])\r\n    } else {\r\n        window._uxa.push([\u0027setPath\u0027, window.location.pathname + window.location.hash.replace(\u0027#\u0027, \u0027?__\u0027)])\r\n    }\r\n}\r\nif (document.location.pathname.toLowerCase().indexOf(\u0027consumer\/mobile\/add-ons\u0027) \u003e -1) {\r\n    var query = document.location.search + \u0027__allFilters\u0027;\r\n    window._uxa.push([\u0027setPath\u0027, query]);\r\n} else if (document.location.pathname.toLowerCase().indexOf(\u0027\/nac\/choose-plan\u0027) \u003e -1) {\r\n    var query = document.location.search + \u0027__allPlans\u0027;\r\n    window._uxa.push([\u0027setPath\u0027, query]);\r\n}\r\n\/\/Qualtrics Integration Start\r\nif (ClickTaleSettings.PTC.RecordSurvey === false) {\r\n    return;\r\n}\r\n\/\/Qualtrics Integration End\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction isVisible(element) {\r\n    if (element \u0026\u0026 typeof element == \u0027string\u0027) {\r\n        element = document.querySelectorAll(element);\r\n    }\r\n    if (element instanceof NodeList \u0026\u0026 element.length \u003e 0) {\r\n        return Array.prototype.filter.call(element, function (el) {\r\n            return isVisible(el);\r\n        }).length == element.length;\r\n    }\r\n    if (element instanceof Element) {\r\n        return ((element.offsetWidth \u003e 0 \u0026\u0026 element.offsetHeight \u003e 0) || element[\u0027getClientRects\u0027]().length \u003e 0);\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nvar isReadyToRecordBlock = false;\r\nvar recordHash = {\r\n    \u0027#\/choose-plan\u0027: true,\r\n    \u0027#\/checkout\/cart-summary\u0027: true,\r\n    \u0027#\/build-plan\u0027: true,\r\n    \u0027#\/add-ons\u0027: true,\r\n    \u0027#\/checkout\/review\u0027: true,\r\n    \u0027#\/checkout\/profile\u0027: true,\r\n    \u0027#\/checkout\/payment-options\u0027: true,\r\n    \u0027#\/checkout\/credit-check\u0027: true,\r\n    \u0027#\/checkout\/credit-check-acceptance\u0027: true,\r\n    \u0027#\/checkout\/pay-now\u0027: true,\r\n    \u0027#\/checkout\/confirm\u0027: true,\r\n    \u0027#\/checkout\/choose-number\u0027: true\r\n}\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        if (\/\\\/bts-offers\/i.test(document.location.hash)) {\r\n            return isVisible(\u0027#packages\u0027);\r\n        } else if (\/\\\/pages\\\/\/i.test(document.location.pathname)) {\r\n            return !!document.querySelector(\u0027#janrainModal #signIn\u0027);\r\n        } else if (location.hash == \u0027#\/choose-phone\u0027) {\r\n            if (isReadyToRecordBlock) {\r\n                return true;\r\n            }\r\n            if (!!document.querySelector(\u0027.device-catalogue-content .nav-tabs\u0027)) {\r\n                setTimeout(function () {\r\n                    isReadyToRecordBlock = true;\r\n                }, 300); \/\/300\u003c500\r\n            }\r\n            return false;\r\n        } else if (recordHash[location.hash]) {\r\n            return (!document.querySelector(\u0027.widget-loader:not(.ng-hide)\u0027) \u0026\u0026 !document.querySelector(\u0027p.msgLoad\u0027));\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    \/\/AB Test Integration Timeout\r\n    setTimeout(function () {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 100, 10, doUpload);\r\n    }, 1000);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027WR-latest.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
				document.body.appendChild(script);
			})();
	}		
if (ct_dispatcher.configName == 'Test_R17')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2022 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 58\r\n\/\/ WR destination: www34\r\n\/\/ WR version: 17.0\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 10.3\r\n\r\nconsole.log(\u0027%c PTC_preWR for R17 zone!!!!\u0027, \u0027background-color : red\u0027);\r\n\r\n\/\/PTC Code Version 10.3\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function() {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function() {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 1;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\nClickTaleSettings.Protocol = ClickTaleSettings.Protocol || {};\r\nClickTaleSettings.Protocol.Method = \"ImpactRecorder\";\r\n\r\n\r\nif (window.Zone \u0026\u0026 typeof Zone[\u0027__symbol__\u0027] === \u0027function\u0027) {\r\n    ClickTaleSettings.PTC.restoreZonedXHR = function(xhr) {\r\n        if (xhr) {\r\n            var prot = Object.getPrototypeOf(xhr);\r\n            while (prot) {\r\n                for (var propName in prot) {\r\n                    var replacement;\r\n                    if (replacement = prot[Zone[\u0027__symbol__\u0027](propName)]) {\r\n                        xhr[propName] = replacement;\r\n                    }\r\n\r\n                }\r\n                prot = Object.getPrototypeOf(prot);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    window.ClickTaleOnXHRCreated = function(xhr) {\r\n        return new XMLHttpRequest.prototype.constructor;\r\n    }\r\n}\r\n\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\n\r\n\r\nClickTaleSettings.CheckAgentSupport = function(f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function(strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nClickTaleSettings.DOM = ClickTaleSettings.DOM || {};\r\n\r\n;\r\n(function() {\r\n    var selectorForBoth = \u0027selector\u0027;\r\n\r\n    \/\/ \/**\r\n    \/\/  *\r\n    \/\/  * @param {!string} value - attribute value || textContent\r\n    \/\/  * @param {!Node} node\r\n    \/\/  * @param {!string} rule - css selector\r\n    \/\/  * @param {!number} type - 0 - text, 1 - attribute\r\n    \/\/  * @returns {!string}\r\n    \/\/  *\/\r\n    \/\/ function transform(value, node, rule, type) {\r\n    \/\/     var reg = \/\\w|[^\\x00-\\x7F]\/g;\r\n    \/\/     return value.replace(reg, \"-\");\r\n    \/\/ }\r\n\r\n    ClickTaleSettings.DOM.PII = {\r\n        Text: [selectorForBoth],\r\n        Attributes: [{\r\n                rule: selectorForBoth,\r\n                attr: \u0027value\u0027\r\n            }] \/\/,\r\n            \/\/Transform: transform\r\n    };\r\n\r\n    \/**\r\n     *\r\n     * @param {!CSSStyleSheet} adoptedStyleSheets\r\n     *\/\r\n    function getSerializedNode(adoptedStyleSheets) {\r\n        var textArray = [];\r\n        adoptedStyleSheets.forEach(function(sheet) {\r\n            var rules = \/** @type{!CSSRuleList} *\/ (sheet.cssRules);\r\n            for (var i = 0; i \u003c rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule \u0026\u0026 rule.cssText) {\r\n                    textArray.push(rule.cssText);\r\n                }\r\n            }\r\n        });\r\n        if (textArray.length) {\r\n            return {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-addoptedCSS\": \"true\"\r\n                },\r\n                childNodes: [{\r\n                    \"nodeType\": 3,\r\n                    \"textContent\": textArray.join(\u0027\\r\\n\u0027)\r\n                }]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!(DocumentOrShadowRoot|Element)} root\r\n     *\/\r\n    function addSerializedNode(root, serializeAPI) {\r\n        var serializeNode, parentNode = root,\r\n            adoptedStyleSheets;\r\n        switch (root.nodeType) {\r\n            case 11:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (typeof root.getRootNode === \u0027function\u0027) {\r\n                    root = root.getRootNode();\r\n                    addSerializedNode(root, serializeAPI);\r\n                }\r\n                break;\r\n            case 9:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                    parentNode = document.head || document.documentElement;\r\n                }\r\n                break;\r\n        }\r\n        if (serializeNode \u0026\u0026 parentNode) {\r\n            serializeAPI.addChild(parentNode, null, serializeNode);\r\n        }\r\n    }\r\n\r\n    ClickTaleSettings.DOM.Serializer = ClickTaleSettings.DOM.Serializer || {};\r\n\r\n    ClickTaleSettings.DOM.Serializer.OnAfterSerialize = function(serializeAPI) {\r\n        var allObservableRoots;\r\n        if (\r\n            \u0027adoptedStyleSheets\u0027 in Document.prototype \u0026\u0026\r\n            window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026\r\n            ClickTaleGlobal.symbols.rootsManager \u0026\u0026\r\n            typeof ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots === \u0027function\u0027 \u0026\u0026\r\n            Array.isArray(allObservableRoots = \/** @type{!Array.\u003cDocumentOrShadowRoot|Element\u003e} *\/ (ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots()))\r\n        ) {\r\n            allObservableRoots.forEach(function(root) {\r\n                addSerializedNode(root, serializeAPI);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    var locationRules = [\r\n        \/\/ {\r\n        \/\/     selector: \u0027selector\u0027,\r\n        \/\/     Attributes: [\u0027value\u0027],\r\n        \/\/     Text: true,\r\n        \/\/     location: {\r\n        \/\/         prop: \u0027pathname\u0027,\r\n        \/\/         search: \/account\/i\r\n        \/\/     }\r\n        \/\/ }\r\n    ];\r\n\r\n\r\n    locationRules.forEach(function(rule) {\r\n        if (rule.location) {\r\n            var prop = rule.location.prop;\r\n            var search = rule.location.search;\r\n            if (search.test(location[prop])) {\r\n                var Attributes = rule.Attributes;\r\n                var selector = rule.selector;\r\n                var Text = rule.Text;\r\n                var PII = ClickTaleSettings.DOM.PII;\r\n                if (Text) {\r\n                    PII.Text.push(selector);\r\n                }\r\n                if (Array.isArray(Attributes)) {\r\n                    Attributes.forEach(function(attr) {\r\n                        PII.Attributes.push({\r\n                            rule: selector,\r\n                            attr: attr\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n\r\n\r\n;\r\n(function() {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTalePIISelector);\r\n            var PII = ClickTaleSettings.DOM.PII;\r\n            PII.Text.push(ClickTalePIISelector);\r\n            PII.Attributes.push({\r\n                rule: ClickTalePIISelector,\r\n                attr: \"value\"\r\n            });\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad PII selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: false,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027\u0027,\r\n    pid: \u0027\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function() {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function(type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    init: function() {\r\n        if (this.isActive \u0026\u0026 this.pid \u0026\u0026 this.subscriberId) {\r\n            var transform = ClickTaleSettings.DOM.Transform = ClickTaleSettings.DOM.Transform || [];\r\n            transform.push({\r\n                rule: \u0027link[href][rel*=\"stylesheet\"]\u0027,\r\n                attr: \"href\",\r\n                transform: function(value, node) {\r\n                    if (value.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, node.href);\r\n                    }\r\n                    return value;\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                transform.push({\r\n                    rule: \u0027img[src]\u0027,\r\n                    attr: \"src\",\r\n                    transform: function(value, node) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027img\u0027, node.src);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\nClickTaleSettings.PTC.AssetManager.init();\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function() {\r\n    var excludeBothArray = [];\r\n\r\n    ClickTaleSettings.ChangeMonitor = {\r\n        Enable: ClickTaleSettings.PTC.EnableChangeMonitor,\r\n        \/\/ Roots: [document.body],\r\n        Exclude: {\r\n            ChildNodes: [],\r\n            Attributes: []\r\n        }\r\n\r\n    }\r\n\r\n    var exclude = ClickTaleSettings.ChangeMonitor.Exclude;\r\n    if (excludeBothArray.length \u003e 0) {\r\n        Array.prototype.push.apply(exclude.ChildNodes, excludeBothArray);\r\n        Array.prototype.push.apply(exclude.Attributes, excludeBothArray);\r\n    }\r\n\r\n    function insertIntoBoth(selector) {\r\n        exclude.ChildNodes.push(selector);\r\n        exclude.Attributes.push(selector);\r\n    }\r\n\r\n    \/\/ if (document.location.pathname === \u0027\/\u0027) {\r\n    \/\/     insertIntoBoth(\"selector\");\r\n    \/\/ }\r\n\r\n    if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTaleCMSelector);\r\n            insertIntoBoth(ClickTaleCMSelector);\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad CM selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function(toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function() {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    (function() {\r\n        function init() {\r\n            var uxaGet = _uxa.push([\"getSessionData\"]);\r\n            if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                var pid = uxaGet.projectId;\r\n                var uu = uxaGet.userId;\r\n                var sn = uxaGet.sessionNumber;\r\n                var pvid = uxaGet.pageNumber;\r\n                if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                    var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                    window.ClicktaleReplayLink = function() {\r\n                        return intLink;\r\n                    }\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.replaylink = intLink;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function callback(context) {\r\n            if (!disableCallback) {\r\n                disableCallback = true;\r\n                init(context);\r\n            }\r\n        }\r\n        var disableCallback = false;\r\n        window._uxa = window._uxa || [];\r\n        _uxa.push([\u0027afterPageView\u0027, callback]);\r\n    })();\r\n\r\n}\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u0027ce5b37b2-95df-49bf-9f4a-ad6e18c29ca8.js?DeploymentConfigName=Test_R17\u0026Version=1\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=58, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www34\",\r\n\t\tSubsId=233256;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\n\/\/Start:IMP-1877\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.CustomVariables = window.ClickTaleSettings.PTC.CustomVariables || [];\r\nwindow.ClickTaleSettings.PTC.CustomVariables = [\r\n    { displayName: \u0027Adobe PageName\u0027, key: \u0027pageName\u0027, slot: 2}\r\n];\r\n\r\nfunction sendCVar(){\r\n    var data = window[\u0027s_c_il\u0027] \u0026\u0026  window[\u0027s_c_il\u0027][1];\r\n    var cVars = window.ClickTaleSettings.PTC.CustomVariables;\r\n    if (!!data){\r\n        for (var i = 0; i \u003c cVars.length; i++){\r\n            var value =  data[cVars[i].key];\r\n            !!value \u0026\u0026 window._uxa.push([\u0027setCustomVariable\u0027, cVars[i].slot, cVars[i].displayName, value]);  \r\n        }\r\n    }\r\n}\r\nwindow.ClickTaleOnStop = window.ClickTaleOnStop || [];\r\nClickTaleOnStop.push(sendCVar);\r\nsendCVar();\r\n\/\/End:IMP-1877\r\nif (window.location.href.toLowerCase().indexOf(\u0027\/pages\/easylogin-fido\/signin\/en\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027trackPageview\u0027, window.location.pathname + window.location.hash.replace(\u0027#\u0027, \u0027?__\u0027) + \u0027?cs-popin-login\u0027]);\r\n}\r\n\r\nif (window.location.href.indexOf(\u0027#\u0027) \u003e -1) {\r\n    if (isVisible(document.querySelector(\u0027.modal-dialog\u0027))) {\r\n        window._uxa.push([\u0027setPath\u0027, window.location.pathname + window.location.hash.replace(\u0027#\u0027, \u0027?__cs-popup-offers\u0027)])\r\n    } else {\r\n        window._uxa.push([\u0027setPath\u0027, window.location.pathname + window.location.hash.replace(\u0027#\u0027, \u0027?__\u0027)])\r\n    }\r\n}\r\nif (document.location.pathname.toLowerCase().indexOf(\u0027consumer\/mobile\/add-ons\u0027) \u003e -1) {\r\n    var query = document.location.search + \u0027__allFilters\u0027;\r\n    window._uxa.push([\u0027setPath\u0027, query]);\r\n} else if (document.location.pathname.toLowerCase().indexOf(\u0027\/nac\/choose-plan\u0027) \u003e -1) {\r\n    var query = document.location.search + \u0027__allPlans\u0027;\r\n    window._uxa.push([\u0027setPath\u0027, query]);\r\n}\r\n\/\/Qualtrics Integration Start\r\nif (ClickTaleSettings.PTC.RecordSurvey === false) {\r\n    return;\r\n}\r\n\/\/Qualtrics Integration End\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction isVisible(element) {\r\n    if (element \u0026\u0026 typeof element == \u0027string\u0027) {\r\n        element = document.querySelectorAll(element);\r\n    }\r\n    if (element instanceof NodeList \u0026\u0026 element.length \u003e 0) {\r\n        return Array.prototype.filter.call(element, function (el) {\r\n            return isVisible(el);\r\n        }).length == element.length;\r\n    }\r\n    if (element instanceof Element) {\r\n        return ((element.offsetWidth \u003e 0 \u0026\u0026 element.offsetHeight \u003e 0) || element[\u0027getClientRects\u0027]().length \u003e 0);\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nvar isReadyToRecordBlock = false;\r\nvar recordHash = {\r\n    \u0027#\/choose-plan\u0027: true,\r\n    \u0027#\/checkout\/cart-summary\u0027: true,\r\n    \u0027#\/build-plan\u0027: true,\r\n    \u0027#\/add-ons\u0027: true,\r\n    \u0027#\/checkout\/review\u0027: true,\r\n    \u0027#\/checkout\/profile\u0027: true,\r\n    \u0027#\/checkout\/payment-options\u0027: true,\r\n    \u0027#\/checkout\/credit-check\u0027: true,\r\n    \u0027#\/checkout\/credit-check-acceptance\u0027: true,\r\n    \u0027#\/checkout\/pay-now\u0027: true,\r\n    \u0027#\/checkout\/confirm\u0027: true,\r\n    \u0027#\/checkout\/choose-number\u0027: true\r\n}\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        if (\/\\\/bts-offers\/i.test(document.location.hash)) {\r\n            return isVisible(\u0027#packages\u0027);\r\n        } else if (\/\\\/pages\\\/\/i.test(document.location.pathname)) {\r\n            return !!document.querySelector(\u0027#janrainModal #signIn\u0027);\r\n        } else if (location.hash == \u0027#\/choose-phone\u0027) {\r\n            if (isReadyToRecordBlock) {\r\n                return true;\r\n            }\r\n            if (!!document.querySelector(\u0027.device-catalogue-content .nav-tabs\u0027)) {\r\n                setTimeout(function () {\r\n                    isReadyToRecordBlock = true;\r\n                }, 300); \/\/300\u003c500\r\n            }\r\n            return false;\r\n        } else if (recordHash[location.hash]) {\r\n            return (!document.querySelector(\u0027.widget-loader:not(.ng-hide)\u0027) \u0026\u0026 !document.querySelector(\u0027p.msgLoad\u0027));\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nif (typeof ClickTaleDelayUploadPage === \u0027function\u0027) {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    \/\/AB Test Integration Timeout\r\n    setTimeout(function () {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 100, 10, doUpload);\r\n    }, 1000);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027latest-WR110.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
				document.body.appendChild(script);
			})();
	}		

if (!ClickTaleGlobal.init.configFoundPTC)
{
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2022 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 58\r\n\/\/ WR destination: www34\r\n\/\/ WR version: 17.0\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 10.5\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function () {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function () {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 5;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\nClickTaleSettings.Protocol = ClickTaleSettings.Protocol || {};\r\nClickTaleSettings.Protocol.Method = \"ImpactRecorder\";\r\nif (window.Zone \u0026\u0026 typeof Zone[\"__symbol__\"] === \"function\") {\r\n    ClickTaleSettings.PTC.restoreZonedXHR = function (xhr) {\r\n        if (xhr) {\r\n            var prot = Object.getPrototypeOf(xhr);\r\n            while (prot) {\r\n                for (var propName in prot) {\r\n                    var replacement;\r\n                    if ((replacement = prot[Zone[\"__symbol__\"](propName)])) {\r\n                        xhr[propName] = replacement;\r\n                    }\r\n                }\r\n                prot = Object.getPrototypeOf(prot);\r\n            }\r\n        }\r\n    };\r\n\r\n    window.ClickTaleOnXHRCreated = function (xhr) {\r\n        xhr = new XMLHttpRequest.prototype.constructor();\r\n        ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n        return xhr;\r\n    };\r\n}\r\nif (document.readyState === \"complete\") {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\n\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\nClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nwindow.ClickTaleSettings.Protocol = {\r\n    Method: \"ImpactRecorder\",\r\n};\r\n\r\nwindow.ClickTaleSettings.Proxy = {\r\n    WR: \"ing-district.clicktale.net\/ctn_v2\/\",\r\n    ImageFlag: \"ing-district.clicktale.net\/ctn_v2\/\",\r\n};\r\n\r\nClickTaleSettings.DOM = ClickTaleSettings.DOM || {};\r\n\r\n(function () {\r\n    var selectorForBoth = \".input-wrap,textarea,a[ute-tracking=\u0027header:myaccount:accounts\u0027]\u003espan\";\r\n    var selectorForText =\r\n        \"address\u003eute-tfn,address a.ute-link,img.fbProfilePicture,#account-type\u003eoption, [name=\u0027ctn\u0027]\u003eoption,span[ng-if=\u0027reviewData\u0027] , address , rg-address[address=\u0027reviewData.serviceAddress\u0027]\u003espan , rg-address[address=\u0027reviewData.serviceAddress\u0027] ,\\\r\n    rg-address[address=\u0027reviewData.billingAddress\u0027]\u003espan , rg-address[address=\u0027reviewData.billingAddress\u0027] , .accounts \u003e.ute-link\u003espan:nth-of-type(2) ,\\\r\n    #passwordResetEmail , .phone-number-caller-data , .phone-number-caller-data\u003espan , #username span[id=\u0027user-name\u0027] ,\\\r\n    .ctn-number\u003espan , .modal-title.modal-title02 , .suspend-device span[ng-bind],.say-hi , .account-section .ute-font-weight-low , .email-word-wrap b ,\\\r\n    .manage\u003ea\u003espan , .section-normal span[ng-repeat*=account] ,\\\r\n    .section-normal rg-address, .section-normal rg-address span, #contactInfoSection ute-tfn\u003ea , #contactInfoSection span,\\\r\n    .welcome-text span, .page-dashboard-service-section a *, #editProfile span, .section-normal .account-name, .section-normal select option,\\\r\n    select#selectedCTN option, [ng-bind*=\u0027account.\u0027], header .user-name, .ute-account-dropdown span, .modal-dialog .modal-body .row *, .modal-dialog .modal-body .accountnumber-text, .-login .m-navLink__caption\";\r\n    var selectorForLabel = \"#account-type\u003eoption, [name=\u0027ctn\u0027]\u003eoption\";\r\n    var selectorForSrc = \"img.fbProfilePicture\";\r\n    var selectorForHref = \"address a.ute-link\";\r\n    var selectorForData = \"address\u003eute-tfn\";\r\n\r\n    \/\/ \/**\r\n    \/\/  *\r\n    \/\/  * @param {!string} value - attribute value || textContent\r\n    \/\/  * @param {!Node} node\r\n    \/\/  * @param {!string} rule - css selector\r\n    \/\/  * @param {!number} type - 0 - text, 1 - attribute\r\n    \/\/  * @returns {!string}\r\n    \/\/  *\/\r\n    \/\/ function transform(value, node, rule, type) {\r\n    \/\/     var reg = \/\\w|[^\\x00-\\x7F]\/g;\r\n    \/\/     return value.replace(reg, \"A\");\r\n    \/\/ }\r\n\r\n    ClickTaleSettings.DOM.PII = {\r\n        Text: [selectorForBoth, selectorForText],\r\n        Attributes: [\r\n            {\r\n                rule: selectorForBoth,\r\n                attr: \"value\",\r\n            },\r\n            {\r\n                rule: selectorForLabel,\r\n                attr: \"label\",\r\n            },\r\n            {\r\n                rule: selectorForSrc,\r\n                attr: \"src\",\r\n            },\r\n            {\r\n                rule: selectorForHref,\r\n                attr: \"href\",\r\n            },\r\n            {\r\n                rule: selectorForData,\r\n                attr: \"href\",\r\n            },\r\n        ],\r\n        \/\/Transform: transform,\r\n        UseAutoMasking: true\r\n    };\r\n\r\n    \/**\r\n     *\r\n     * @param {!CSSStyleSheet} adoptedStyleSheets\r\n     *\/\r\n    function getSerializedNode(adoptedStyleSheets) {\r\n        var textArray = [];\r\n        adoptedStyleSheets.forEach(function (sheet) {\r\n            var rules = \/** @type{!CSSRuleList} *\/ (sheet.cssRules);\r\n            for (var i = 0; i \u003c rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule \u0026\u0026 rule.cssText) {\r\n                    textArray.push(rule.cssText);\r\n                }\r\n            }\r\n        });\r\n        if (textArray.length) {\r\n            return {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-addoptedCSS\": \"true\",\r\n                },\r\n                childNodes: [\r\n                    {\r\n                        nodeType: 3,\r\n                        textContent: textArray.join(\"\\r\\n\"),\r\n                    },\r\n                ],\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!(DocumentOrShadowRoot|Element)} root\r\n     *\/\r\n    function addSerializedNode(root, serializeAPI) {\r\n        var serializeNode,\r\n            parentNode = root,\r\n            adoptedStyleSheets;\r\n        switch (root.nodeType) {\r\n            case 11:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (typeof root.getRootNode === \"function\") {\r\n                    root = root.getRootNode();\r\n                    addSerializedNode(root, serializeAPI);\r\n                }\r\n                break;\r\n            case 9:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                    parentNode = document.head || document.documentElement;\r\n                }\r\n                break;\r\n        }\r\n        if (serializeNode \u0026\u0026 parentNode) {\r\n            serializeAPI.addChild(parentNode, null, serializeNode);\r\n        }\r\n    }\r\n\r\n    ClickTaleSettings.DOM.Serializer = ClickTaleSettings.DOM.Serializer || {};\r\n\r\n    ClickTaleSettings.DOM.Serializer.OnAfterSerialize = function (serializeAPI) {\r\n        var allObservableRoots;\r\n        if (\"adoptedStyleSheets\" in Document.prototype \u0026\u0026 window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026 ClickTaleGlobal.symbols.rootsManager \u0026\u0026 typeof ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots === \"function\" \u0026\u0026 Array.isArray((allObservableRoots = \/** @type{!Array.\u003cDocumentOrShadowRoot|Element\u003e} *\/ (ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots())))) {\r\n            allObservableRoots.forEach(function (root) {\r\n                addSerializedNode(root, serializeAPI);\r\n            });\r\n        }\r\n        var dataStyledComponents = document.querySelectorAll(\"[data-styled-components]\");\r\n        if (!!dataStyledComponents) {\r\n            var cssRulesString = \"\";\r\n            Array.prototype.forEach.call(dataStyledComponents, function (el, ind) {\r\n                if (!!el \u0026\u0026 el.sheet \u0026\u0026 (el.sheet.rules || el.sheet.cssRules)) {\r\n                    var cssRulesObj = !!el.sheet.rules ? el.sheet.rules : el.sheet.cssRules;\r\n                    for (var i in cssRulesObj) {\r\n                        if (cssRulesObj[i][\"cssText\"]) {\r\n                            cssRulesString += cssRulesObj[i][\"cssText\"] + \" \";\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            serializeAPI.addChild(document.head, null, {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-styled-components\": \"\",\r\n                },\r\n                childNodes: [\r\n                    {\r\n                        nodeType: 3,\r\n                        textContent: cssRulesString,\r\n                    },\r\n                ],\r\n            });\r\n        }\r\n    };\r\n\r\n    var locationRules = [\r\n        {\r\n            selector: \"#selectedCTN option , [ng-model=\u0027selectedCTN\u0027] option\",\r\n            Attributes: [\"label\"],\r\n            Text: true,\r\n            location: {\r\n                prop: \"href\",\r\n                search: \/my-account\/i,\r\n            },\r\n        },\r\n    ];\r\n\r\n    locationRules.forEach(function (rule) {\r\n        if (rule.location) {\r\n            var prop = rule.location.prop;\r\n            var search = rule.location.search;\r\n            if (search.test(location[prop])) {\r\n                var Attributes = rule.Attributes;\r\n                var selector = rule.selector;\r\n                var Text = rule.Text;\r\n                var PII = ClickTaleSettings.DOM.PII;\r\n                if (Text) {\r\n                    PII.Text.push(selector);\r\n                }\r\n                if (Array.isArray(Attributes)) {\r\n                    Attributes.forEach(function (attr) {\r\n                        PII.Attributes.push({\r\n                            rule: selector,\r\n                            attr: attr,\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \"string\" \u0026\u0026 ClickTalePIISelector != \"\") {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTalePIISelector);\r\n            var PII = ClickTaleSettings.DOM.PII;\r\n            PII.Text.push(ClickTalePIISelector);\r\n            PII.Attributes.push({\r\n                rule: ClickTalePIISelector,\r\n                attr: \"value\",\r\n            });\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \"function\") {\r\n                ClickTaleNote(\"Bad PII selector: \" + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: false,\r\n    isNeedForImg: false,\r\n    subscriberId: \"\",\r\n    pid: \"\",\r\n    storageUrl: \"https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\",\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \"\/\" + this.pid;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \"\";\r\n        if (url) {\r\n            switch (type) {\r\n                case \"css\":\r\n                    AMUrl = this.getPrefixUrl() + \"\/CSS\/\" + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \"image\":\r\n                    AMUrl = this.getPrefixUrl() + \"\/IMAGE\/\" + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    init: function () {\r\n        if (this.isActive \u0026\u0026 this.pid \u0026\u0026 this.subscriberId) {\r\n            var transform = (ClickTaleSettings.DOM.Transform = ClickTaleSettings.DOM.Transform || []);\r\n            transform.push({\r\n                rule: \u0027link[href][rel*=\"stylesheet\"]\u0027,\r\n                attr: \"href\",\r\n                transform: function (value, node) {\r\n                    if (value.indexOf(\"fonts.googleapis.com\") == -1) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\"css\", node.href);\r\n                    }\r\n                    return value;\r\n                },\r\n            });\r\n            if (this.isNeedForImg) {\r\n                transform.push({\r\n                    rule: \"img[src]\",\r\n                    attr: \"src\",\r\n                    transform: function (value, node) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\"image\", node.src);\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    },\r\n};\r\nClickTaleSettings.PTC.AssetManager.init();\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n    var excludeBothArray = [\"p:empty\"];\r\n\r\n    ClickTaleSettings.ChangeMonitor = {\r\n        Enable: ClickTaleSettings.PTC.EnableChangeMonitor,\r\n        \/\/ Roots: [document.body],\r\n        Exclude: {\r\n            ChildNodes: [],\r\n            Attributes: [],\r\n        },\r\n    };\r\n\r\n    var exclude = ClickTaleSettings.ChangeMonitor.Exclude;\r\n    if (excludeBothArray.length \u003e 0) {\r\n        Array.prototype.push.apply(exclude.ChildNodes, excludeBothArray);\r\n        Array.prototype.push.apply(exclude.Attributes, excludeBothArray);\r\n    }\r\n\r\n    function insertIntoBoth(selector) {\r\n        exclude.ChildNodes.push(selector);\r\n        exclude.Attributes.push(selector);\r\n    }\r\n\r\n    \/\/ if (document.location.pathname === \u0027\/\u0027) {\r\n    \/\/     insertIntoBoth(\"selector\");\r\n    \/\/ }\r\n\r\n    if (typeof window.ClickTaleCMSelector === \"string\" \u0026\u0026 window.ClickTaleCMSelector != \"\") {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTaleCMSelector);\r\n            insertIntoBoth(ClickTaleCMSelector);\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \"function\") {\r\n                ClickTaleNote(\"Bad CM selector: \" + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if (!toDoHandler || !toCheckHandler) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \"function\") {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\nfunction ClickTaleOnRecording() {\r\n    \/\/Start CAP Integrations\r\n\r\n    if (!window.ClickTaleSettings.PTC.IntegrationsReady) {\r\n        window.ClickTaleSettings.PTC.IntegrationsReady = true;\r\n\r\n        (function () {\r\n            function init(context) {\r\n                function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n                    var sendArtificialPageviews = true;\r\n                    var M2P = true;\r\n\r\n                    if (CS_CONF.tagDeploymentMode === \"LOAD_CLICKTALE_PTC\") {\r\n                        M2P = false;\r\n                    }\r\n\r\n                    csKey = csTypeVendorPrefix + csKey;\r\n\r\n                    window._uxa = window._uxa || [];\r\n                    _uxa.push([\r\n                        \"trackDynamicVariable\",\r\n                        {\r\n                            key: csKey,\r\n                            value: csValue,\r\n                        },\r\n                    ]);\r\n\r\n                    if (csEventType === \"etr\") {\r\n                        if (M2P) {\r\n                            if (window.ClickTaleEventTrigger) {\r\n                                ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                            }\r\n                        } else {\r\n                            _uxa.push([\"trackEventTriggerRecording\", csKey]);\r\n                        }\r\n                    }\r\n                    if (csPV \u0026\u0026 sendArtificialPageviews) {\r\n                        _uxa.push([\"setQuery\", csPV]);\r\n                        if (M2P) {\r\n                            if (window.ClickTaleLogicalWithUploadPage) {\r\n                                ClickTaleLogicalWithUploadPage(window.location.href);\r\n                            }\r\n                        } else {\r\n                            _uxa.push([\"trackPageview\", window.location.pathname]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function generateReplayLink(pvNum, vendor) {\r\n                    var vd = vendor;\r\n                    var pv = 0;\r\n                    var goToFirst = false;\r\n                    if (pvNum === 0) {\r\n                        goToFirst = true;\r\n                    }\r\n                    if (isNaN(pvNum)) {\r\n                        vd = pvNum;\r\n                        if (!pvNum) {\r\n                            vd = \"\";\r\n                        }\r\n                    } else {\r\n                        pv = pvNum;\r\n                        if (!vd) {\r\n                            vd = \"\";\r\n                        }\r\n                    }\r\n\r\n                    var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                    if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                        var pid = uxaGet.projectId;\r\n                        var uu = uxaGet.userId;\r\n                        var sn = uxaGet.sessionNumber;\r\n                        var pvid = uxaGet.pageNumber - pv;\r\n                        if (goToFirst) {\r\n                            pvid = 1;\r\n                        }\r\n\r\n                        if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                            var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid + \"\u0026vd=\" + vd;\r\n                            return intLink;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \/*\r\n                 *Name: Domo CAP Integration\r\n                 *Version: 1.8\r\n                 *Required Shared Components: ClickTaleOnRecording, _uxa afterPageView callback, generateReplayLink\r\n                 *\/\r\n                if (ClickTaleIsSavedRecording()) {\r\n                    var intLink = generateReplayLink();\r\n                    if (intLink) {\r\n                        var topDom = (function () {\r\n                            var i = 0,\r\n                                domain = document.domain,\r\n                                p = domain.split(\".\"),\r\n                                s = \"_gd\" + new Date().getTime();\r\n                            while (i \u003c p.length - 1 \u0026\u0026 document.cookie.indexOf(s + \"=\" + s) == -1) {\r\n                                domain = p.slice(-1 - ++i).join(\".\");\r\n                                document.cookie = s + \"=\" + s + \";domain=\" + domain + \";\";\r\n                            }\r\n                            document.cookie = s + \"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;domain=\" + domain + \";\";\r\n                            return domain;\r\n                        })();\r\n\r\n                        var expiryDate = new Date(Date.now() + 3600 * 1000 * 24 * 365).toUTCString();\r\n                        document.cookie = \"ClicktaleReplayLink=\" + intLink + \";domain=.\" + topDom + \";path=\/;expires=\" + expiryDate + \";\";\r\n                    }\r\n                }\r\n                \/\/Domo CAP Integration End\r\n            }\r\n\r\n            function callback(context) {\r\n                if (!disableCallback) {\r\n                    disableCallback = true;\r\n                    init(context);\r\n\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.integrations = CS_CONF.integrations || [];\r\n                        CS_CONF.integrations.push(\"Domo\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            var disableCallback = false;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"afterPageView\", callback]);\r\n        })();\r\n    }\r\n\r\n    \/\/End CAP Integrations\r\n\r\n    (function () {\r\n        function init() {\r\n            var uxaGet = _uxa.push([\"getSessionData\"]);\r\n            if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                var pid = uxaGet.projectId;\r\n                var uu = uxaGet.userId;\r\n                var sn = uxaGet.sessionNumber;\r\n                var pvid = uxaGet.pageNumber;\r\n                if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                    var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid + \"\u0026vd=csrl\";\r\n                    window.ClicktaleReplayLink = function () {\r\n                        return intLink;\r\n                    };\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.replaylink = intLink;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function callback(context) {\r\n            if (!disableCallback) {\r\n                disableCallback = true;\r\n                init(context);\r\n            }\r\n        }\r\n        var disableCallback = false;\r\n        window._uxa = window._uxa || [];\r\n        _uxa.push([\"afterPageView\", callback]);\r\n    })();\r\n}\r\n\r\nClickTaleSettings.LocRefRew = function (url) {\r\n    if (url) {\r\n        var matches = \/documents\\\/([^\\?]*)\/g.exec(url);\r\n        if (matches \u0026\u0026 matches.length == 2) {\r\n            if (matches.length \u003e= 2) {\r\n                return url.replace(matches[1], Array(matches[1].length).join(\"-\"));\r\n            }\r\n        }\r\n    }\r\n    return url;\r\n};\r\n\r\nClickTaleSettings.LocationRewriter = ClickTaleSettings.LocRefRew;\r\nClickTaleSettings.ReferrerRewriter = ClickTaleSettings.LocRefRew;\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u0027ce5b37b2-95df-49bf-9f4a-ad6e18c29ca8.js?DeploymentConfigName=Malka_20220210\u0026Version=2\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=58, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www34\",\r\n\t\tSubsId=233256;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\n\/\/Start:IMP-1877\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.CustomVariables = window.ClickTaleSettings.PTC.CustomVariables || [];\r\nwindow.ClickTaleSettings.PTC.CustomVariables = [{ displayName: \"Adobe PageName\", key: \"pageName\", slot: 2 }];\r\n\r\nfunction sendCVar() {\r\n    var data = window[\"s_c_il\"] \u0026\u0026 window[\"s_c_il\"][1];\r\n    var cVars = window.ClickTaleSettings.PTC.CustomVariables;\r\n    if (!!data) {\r\n        for (var i = 0; i \u003c cVars.length; i++) {\r\n            var value = data[cVars[i].key];\r\n            !!value \u0026\u0026 window._uxa.push([\"setCustomVariable\", cVars[i].slot, cVars[i].displayName, value]);\r\n        }\r\n    }\r\n}\r\nwindow.ClickTaleOnStop = window.ClickTaleOnStop || [];\r\nClickTaleOnStop.push(sendCVar);\r\nsendCVar();\r\n\/\/End:IMP-1877\r\nif (window.location.href.toLowerCase().indexOf(\"\/pages\/easylogin-fido\/signin\/en\") \u003e -1) {\r\n    window._uxa.push([\"trackPageview\", window.location.pathname + window.location.hash.replace(\"#\", \"?__\") + \"?cs-popin-login\"]);\r\n}\r\n\r\nif (window.location.href.indexOf(\"#\") \u003e -1) {\r\n    if (isVisible(document.querySelector(\".modal-dialog\"))) {\r\n        window._uxa.push([\"setPath\", window.location.pathname + window.location.hash.replace(\"#\", \"?__cs-popup-offers\")]);\r\n    } else {\r\n        window._uxa.push([\"setPath\", window.location.pathname + window.location.hash.replace(\"#\", \"?__\")]);\r\n    }\r\n}\r\nif (document.location.pathname.toLowerCase().indexOf(\"consumer\/mobile\/add-ons\") \u003e -1) {\r\n    var query = document.location.search + \"__allFilters\";\r\n    window._uxa.push([\"setPath\", query]);\r\n} else if (document.location.pathname.toLowerCase().indexOf(\"\/nac\/choose-plan\") \u003e -1) {\r\n    var query = document.location.search + \"__allPlans\";\r\n    window._uxa.push([\"setPath\", query]);\r\n}\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n}\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"],script[src*=\"contentsquare\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \"function\") {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \"\"));\r\n        }\r\n    }\r\n});\r\n\r\nfunction isVisible(element) {\r\n    if (element \u0026\u0026 typeof element == \"string\") {\r\n        element = document.querySelectorAll(element);\r\n    }\r\n    if (element instanceof NodeList \u0026\u0026 element.length \u003e 0) {\r\n        return (\r\n            Array.prototype.filter.call(element, function (el) {\r\n                return isVisible(el);\r\n            }).length == element.length\r\n        );\r\n    }\r\n    if (element instanceof Element) {\r\n        return (element.offsetWidth \u003e 0 \u0026\u0026 element.offsetHeight \u003e 0) || element[\"getClientRects\"]().length \u003e 0;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \"function\" \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    }\r\n}\r\n\r\nvar isReadyToRecordBlock = false;\r\nvar recordHash = {\r\n    \"#\/choose-plan\": true,\r\n    \"#\/checkout\/cart-summary\": true,\r\n    \"#\/build-plan\": true,\r\n    \"#\/add-ons\": true,\r\n    \"#\/checkout\/review\": true,\r\n    \"#\/checkout\/profile\": true,\r\n    \"#\/checkout\/payment-options\": true,\r\n    \"#\/checkout\/credit-check\": true,\r\n    \"#\/checkout\/credit-check-acceptance\": true,\r\n    \"#\/checkout\/pay-now\": true,\r\n    \"#\/checkout\/confirm\": true,\r\n    \"#\/checkout\/choose-number\": true,\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \"function\" \u0026\u0026 ClickTaleIsRecording()) {\r\n        if (\/\\\/bts-offers\/i.test(document.location.hash)) {\r\n            return isVisible(\"#packages\");\r\n        } else if (\/\\\/pages\\\/\/i.test(document.location.pathname)) {\r\n            return !!document.querySelector(\"#janrainModal #signIn\");\r\n        } else if (location.hash == \"#\/choose-phone\") {\r\n            if (isReadyToRecordBlock) {\r\n                return true;\r\n            }\r\n            if (!!document.querySelector(\".device-catalogue-content .nav-tabs\")) {\r\n                setTimeout(function () {\r\n                    isReadyToRecordBlock = true;\r\n                }, 300); \/\/300\u003c500\r\n            }\r\n            return false;\r\n        } else if (recordHash[location.hash]) {\r\n            return !document.querySelector(\".widget-loader:not(.ng-hide)\") \u0026\u0026 !document.querySelector(\"p.msgLoad\");\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nif (typeof ClickTaleDelayUploadPage === \"function\") {\r\n    ClickTaleDelayUploadPage();\r\n\r\n    \/\/AB Test Integration Timeout\r\n    setTimeout(function () {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 100, 10, doUpload);\r\n    }, 1000);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \"function\") {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027bridge-WR110.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
		document.body.appendChild(script);	})();
	}

//Signature:h4sFd3uG/Jj/v9FvME+agp58digfeWACOk5H4HblJ2i1RiZ/XYchRBLJmNKTtj7yU2Zp9Z/Ymq5zHUfj0stfPEMfla2rK19bwg0pzMwp4qPbCsMgZksxi+F9dtPQQMwbXiLZgyqG72MIfllcSBM/GcTvBbQF3fJYF6c06ni46LI=